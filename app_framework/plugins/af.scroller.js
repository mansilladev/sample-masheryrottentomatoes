/**
 * af.scroller 
 * created by appMobi with modifications by Carlos Ouro @ Badoo and Intel
 * Supports iOS native touch scrolling
 * Optimizations and bug improvements by Intel
 * @copyright Intel
 */
!function($){function checkConsistency(id){return cache[id].el?!0:(delete cache[id],!1)}function bindTouchLayer(){//use a single bind for all scrollers
if(af.os.android&&!af.os.chrome&&af.os.webkit){var androidFixOn=!1;//connect to touchLayer to detect editMode
$.bind($.touchLayer,["cancel-enter-edit","exit-edit"],function(){if(androidFixOn){androidFixOn=!1;//dehactivate on scroller
for(var el in cache)checkConsistency(el)&&cache[el].androidFormsMode&&cache[el].stopFormsMode()}})}boundTouchLayer=!0}var HIDE_REFRESH_TIME=75,cache=[],objId=function(obj){return obj.afScrollerId||(obj.afScrollerId=$.uuid()),obj.afScrollerId};$.fn.scroller=function(opts){for(var tmp,id,i=0;i<this.length;i++)//cache system
id=objId(this[i]),cache[id]?tmp=cache[id]:(opts||(opts={}),$.feat.nativeTouchScroll||(opts.useJsScroll=!0),tmp=scroller(this[i],opts),cache[id]=tmp);return 1==this.length?tmp:this};var boundTouchLayer=!1,scroller=function(){function createScrollBar(width,height){var scrollDiv=document.createElement("div");return scrollDiv.style.position="absolute",scrollDiv.style.width=width+"px",scrollDiv.style.height=height+"px",scrollDiv.style[$.feat.cssPrefix+"BorderRadius"]="2px",scrollDiv.style.borderRadius="2px",scrollDiv.style.display="none",scrollDiv.className="scrollBar",scrollDiv.style.background="black",scrollDiv}var jsScroller,nativeScroller,translateOpen=$.feat.cssTransformStart,translateClose=$.feat.cssTransformEnd,scroller=function(elID,opts){var el;return!boundTouchLayer&&$.touchLayer&&$.isObject($.touchLayer)?bindTouchLayer():$.touchLayer&&$.isObject($.touchLayer)||($.touchLayer={}),el="string"==typeof elID||elID instanceof String?document.getElementById(elID):elID,el?af.os.desktop?new scrollerCore(el,opts):opts.useJsScroll?new jsScroller(el,opts):new nativeScroller(el,opts):(alert("Could not find element for scroller "+elID),void 0)},scrollerCore=function(el,opts){this.el=el,this.afEl=$(this.el);for(var j in opts)this[j]=opts[j]};return scrollerCore.prototype={//core default properties
refresh:!1,refreshContent:"Pull to Refresh",refreshHangTimeout:2e3,refreshHeight:60,refreshElement:null,refreshCancelCB:null,refreshRunning:!1,scrollTop:0,scrollLeft:0,preventHideRefresh:!0,verticalScroll:!0,horizontalScroll:!1,refreshTriggered:!1,moved:!1,eventsActive:!1,rememberEventsActive:!1,scrollingLocked:!1,autoEnable:!0,blockFormsFix:!1,loggedPcentY:0,loggedPcentX:0,infinite:!1,infiniteEndCheck:!1,infiniteTriggered:!1,scrollSkip:!1,scrollTopInterval:null,scrollLeftInterval:null,bubbles:!0,lockBounce:!1,_scrollTo:function(params,time){if(time=parseInt(time,10),0===time||isNaN(time))return this.el.scrollTop=Math.abs(params.y),this.el.scrollLeft=Math.abs(params.x),void 0;var singleTick=10,distPerTick=(this.el.scrollTop-params.y)/Math.ceil(time/singleTick),distLPerTick=(this.el.scrollLeft-params.x)/Math.ceil(time/singleTick),self=this,toRunY=Math.ceil(this.el.scrollTop-params.y)/distPerTick,toRunX=Math.ceil(this.el.scrollLeft-params.x)/distPerTick,xRun=0,yRun=0;self.scrollTopInterval=window.setInterval(function(){self.el.scrollTop-=distPerTick,yRun++,yRun>=toRunY&&(self.el.scrollTop=params.y,clearInterval(self.scrollTopInterval))},singleTick),self.scrollLeftInterval=window.setInterval(function(){self.el.scrollLeft-=distLPerTick,xRun++,xRun>=toRunX&&(self.el.scrollLeft=params.x,clearInterval(self.scrollLeftInterval))},singleTick)},enable:function(){},disable:function(){},hideScrollbars:function(){},addPullToRefresh:function(){},/**
             * We do step animations for 'native' - iOS is acceptable and desktop browsers are fine
             * instead of css3
             */
_scrollToTop:function(time){this._scrollTo({x:0,y:0},time)},_scrollToBottom:function(time){this._scrollTo({x:0,y:this.el.scrollHeight-this.el.offsetHeight},time)},scrollToBottom:function(time){return this._scrollToBottom(time)},scrollToTop:function(time){return this._scrollToTop(time)},//methods
init:function(el,opts){this.el=el,this.afEl=$(this.el),this.defaultProperties();for(var j in opts)this[j]=opts[j];//assign self destruct
var that=this,orientationChangeProxy=function(){//no need to readjust if disabled...
that.eventsActive&&that.adjustScroll()};this.afEl.bind("destroy",function(){that.disable(!0);//with destroy notice
var id=that.el.afScrollerId;cache[id]&&delete cache[id],$.unbind($.touchLayer,"orientationchange-reshape",orientationChangeProxy)}),$.bind($.touchLayer,"orientationchange-reshape",orientationChangeProxy)},needsFormsFix:function(focusEl){return this.useJsScroll&&this.isEnabled()&&"none"!=this.el.style.display&&$(focusEl).closest(this.afEl).size()>0},handleEvent:function(e){if(!this.scrollingLocked)switch(e.type){case"touchstart":clearInterval(this.scrollTopInterval),this.preventHideRefresh=!this.refreshRunning,// if it's not running why prevent it xD
this.moved=!1,this.onTouchStart(e),this.bubbles||e.stopPropagation();break;case"touchmove":this.onTouchMove(e),this.bubbles||e.stopPropagation();break;case"touchend":this.onTouchEnd(e),this.bubbles||e.stopPropagation();break;case"scroll":this.onScroll(e)}},coreAddPullToRefresh:function(rEl){rEl&&(this.refreshElement=rEl);//Add the pull to refresh text.  Not optimal but keeps from others overwriting the content and worrying about italics
//add the refresh div
var afEl;if(null===this.refreshElement){var orginalEl=document.getElementById(this.container.id+"_pulldown");afEl=null!==orginalEl?af(orginalEl):af("<div id='"+this.container.id+"_pulldown' class='afscroll_refresh' style='border-radius:.6em;border: 1px solid #2A2A2A;background-image: -webkit-gradient(linear,left top,left bottom,color-stop(0,#666666),color-stop(1,#222222));background:#222222;margin:0px;height:60px;position:relative;text-align:center;line-height:60px;color:white;width:100%;'>"+this.refreshContent+"</div>")}else afEl=af(this.refreshElement);var el=afEl.get(0);this.refreshContainer=af('<div style="overflow:hidden;width:100%;height:0;margin:0;padding:0;padding-left:5px;padding-right:5px;display:none;"></div>'),$(this.el).prepend(this.refreshContainer.append(el,"top")),this.refreshContainer=this.refreshContainer[0]},fireRefreshRelease:function(triggered){if(this.refresh&&triggered){var autoCancel=$.trigger(this,"refresh-release",[triggered])!==!1;if(this.preventHideRefresh=!1,this.refreshRunning=!0,autoCancel){var that=this;this.refreshHangTimeout>0&&(this.refreshCancelCB=setTimeout(function(){that.hideRefresh()},this.refreshHangTimeout))}}},setRefreshContent:function(content){af(this.container).find(".afscroll_refresh").html(content)},lock:function(){this.scrollingLocked||(this.scrollingLocked=!0,this.rememberEventsActive=this.eventsActive,this.eventsActive&&this.disable())},unlock:function(){this.scrollingLocked&&(this.scrollingLocked=!1,this.rememberEventsActive&&this.enable())},scrollToItem:function(el,where){//TODO: add functionality for x position
$.is$(el)||(el=$(el));var newTop,itemPos,panelTop,itemTop;"bottom"==where?(itemPos=el.offset(),newTop=itemPos.top-this.afEl.offset().bottom+itemPos.height,newTop+=4):(itemTop=el.offset().top,newTop=itemTop-document.body.scrollTop,panelTop=this.afEl.offset().top,document.body.scrollTop<panelTop&&(newTop-=panelTop),newTop-=4),this.scrollBy({y:newTop,x:0},0)},setPaddings:function(top,bottom){var el=$(this.el),curTop=numOnly(el.css("paddingTop"));el.css("paddingTop",top+"px").css("paddingBottom",bottom+"px"),//don't let padding mess with scroll
this.scrollBy({y:top-curTop,x:0})},//freak of mathematics, but for our cases it works
divide:function(a,b){return 0!==b?a/b:0},isEnabled:function(){return this.eventsActive},addInfinite:function(){this.infinite=!0},clearInfinite:function(){this.infiniteTriggered=!1,this.scrollSkip=!0}},//extend to jsScroller and nativeScroller (constructs)
jsScroller=function(el,opts){this.init(el,opts),//test
//this.refresh=true;
this.container=this.el.parentNode,this.container.afScrollerId=el.afScrollerId,this.afEl=$(this.container),"hidden"!=this.container.style.overflow&&(this.container.style.overflow="hidden"),this.addPullToRefresh(null,!0),this.autoEnable&&this.enable(!0);var scrollDiv;//create vertical scroll
this.verticalScroll&&this.verticalScroll===!0&&this.scrollBars===!0&&(scrollDiv=createScrollBar(5,20),scrollDiv.style.top="0px",this.vScrollCSS&&(scrollDiv.className=this.vScrollCSS),//scrollDiv.style.opacity = "0";
scrollDiv.style.display="none",this.container.appendChild(scrollDiv),this.vscrollBar=scrollDiv,scrollDiv=null),//create horizontal scroll
this.horizontalScroll&&this.horizontalScroll===!0&&this.scrollBars===!0&&(scrollDiv=createScrollBar(20,5),scrollDiv.style.bottom="0px",this.hScrollCSS&&(scrollDiv.className=this.hScrollCSS),//scrollDiv.style.opacity = "0";
scrollDiv.style.display="none",this.container.appendChild(scrollDiv),this.hscrollBar=scrollDiv,scrollDiv=null),this.horizontalScroll&&(this.el.style["float"]="left"),this.el.hasScroller=!0},nativeScroller=function(el,opts){opts.nativeParent&&(el=el.parentNode),this.init(el,opts);var $el=$(el);if(opts.noParent!==!0){var oldParent=$el.parent();$el.css("height",oldParent.height()).css("width",oldParent.width()),$el.insertBefore($el.parent()),//$el.parent().parent().append($el);
oldParent.remove()}this.container=this.el,$el.css("-webkit-overflow-scrolling","touch"),opts.autoEnable&&this.enable()},nativeScroller.prototype=new scrollerCore,jsScroller.prototype=new scrollerCore,///Native scroller
nativeScroller.prototype.defaultProperties=function(){this.refreshContainer=null,this.dY=this.cY=0,this.dX=this.cX=0,this.cancelPropagation=!1,this.loggedPcentY=0,this.loggedPcentX=0;var that=this;this.adjustScrollOverflowProxy_=function(){that.afEl.css("overflow","auto"),that.afEl.parent().css("overflow","hidden")}},nativeScroller.prototype.enable=function(firstExecution){this.eventsActive||(this.eventsActive=!0,//unlock overflow
this.el.style.overflow="auto",this.el.parentNode.style.overflow="hidden",//set current scroll
firstExecution||this.adjustScroll(),//set events
this.el.addEventListener("touchstart",this,!1),this.el.addEventListener("scroll",this,!1))},nativeScroller.prototype.disable=function(destroy){this.eventsActive&&(//log current scroll
this.logPos(this.el.scrollLeft,this.el.scrollTop),//lock overflow
destroy||(this.el.style.overflow="hidden"),//remove events
this.el.removeEventListener("touchstart",this,!1),this.el.removeEventListener("touchmove",this,!1),this.el.removeEventListener("touchend",this,!1),this.el.removeEventListener("scroll",this,!1),this.eventsActive=!1)},nativeScroller.prototype.addPullToRefresh=function(el,leaveRefresh){this.el.removeEventListener("touchstart",this,!1),this.el.addEventListener("touchstart",this,!1),leaveRefresh||(this.refresh=!0),this.refresh&&this.refresh===!0&&(this.coreAddPullToRefresh(el),this.refreshContainer.style.position="absolute",this.refreshContainer.style.top="-60px",this.refreshContainer.style.height="60px",this.refreshContainer.style.display="block")},nativeScroller.prototype.onTouchStart=function(e){0===this.el.scrollTop&&(this.el.scrollTop=1),this.el.scrollTop===this.el.scrollHeight-this.el.clientHeight&&(this.el.scrollTop-=1),this.horizontalScroll&&(0===this.el.scrollLeft&&(this.el.scrollLeft=1),this.el.scrollLeft===this.el.scrollWidth-this.el.clientWidth&&(this.el.scrollLeft-=1)),this.refreshCancelCB&&clearTimeout(this.refreshCancelCB),//get refresh ready
this.el.addEventListener("touchmove",this,!1),this.dY=e.touches[0].pageY,(this.refresh||this.infinite)&&this.refresh&&this.dY<0&&this.showRefresh()},nativeScroller.prototype.onTouchMove=function(e){var newcY=e.touches[0].pageY-this.dY,newcX=e.touches[0].pageX-this.dX;this.hasVertScroll&&this.el.clientHeight==this.el.scrollHeight&&e.preventDefault(),this.hasHorScroll&&this.el.clientWidth==this.el.scrollWidth&&e.preventDefault(),this.moved||($.trigger(this,"scrollstart",[this.el]),$.trigger($.touchLayer,"scrollstart",[this.el]),this.el.addEventListener("touchend",this,!1),this.moved=!0),newcY-this.cY,newcX-this.cX,//check for trigger
this.refresh&&this.el.scrollTop<0?this.showRefresh():this.refreshTriggered&&this.refresh&&this.el.scrollTop>this.refreshHeight&&(this.refreshTriggered=!1,this.refreshCancelCB&&clearTimeout(this.refreshCancelCB),this.hideRefresh(!1),$.trigger(this,"refresh-cancel")),this.cY=newcY,this.cX=newcX},nativeScroller.prototype.showRefresh=function(){this.refreshTriggered||(this.refreshTriggered=!0,$.trigger(this,"refresh-trigger"))},nativeScroller.prototype.onTouchEnd=function(){var triggered=this.el.scrollTop<=-this.refreshHeight;this.fireRefreshRelease(triggered,!0),triggered&&this.refresh&&(//lock in place
this.refreshContainer.style.position="relative",this.refreshContainer.style.top="0px"),this.dY=this.cY=0,this.el.removeEventListener("touchmove",this,!1),this.el.removeEventListener("touchend",this,!1),this.infiniteEndCheck=!0,this.infinite&&!this.infiniteTriggered&&Math.abs(this.el.scrollTop)>=this.el.scrollHeight-this.el.clientHeight&&(this.infiniteTriggered=!0,$.trigger(this,"infinite-scroll"),this.infiniteEndCheck=!0),this.touchEndFired=!0;//pollyfil for scroll end since webkit doesn't give any events during the "flick"
var max=200,self=this,currPos={top:this.el.scrollTop,left:this.el.scrollLeft},counter=0;self.nativePolling=setInterval(function(){return counter++,counter>=max?(clearInterval(self.nativePolling),void 0):((self.el.scrollTop!=currPos.top||self.el.scrollLeft!=currPos.left)&&(clearInterval(self.nativePolling),$.trigger($.touchLayer,"scrollend",[self.el]),//notify touchLayer of this elements scrollend
$.trigger(self,"scrollend",[self.el])),void 0)},20)},nativeScroller.prototype.hideRefresh=function(animate){if(!this.preventHideRefresh){var that=this,endAnimationCb=function(canceled){canceled||(//not sure if this should be the correct logic....
that.el.style[$.feat.cssPrefix+"Transform"]="none",that.el.style[$.feat.cssPrefix+"TransitionProperty"]="none",that.el.scrollTop=0,that.logPos(that.el.scrollLeft,0)),that.refreshContainer.style.top="-60px",that.refreshContainer.style.position="absolute",that.dY=that.cY=0,$.trigger(that,"refresh-finish")};animate!==!1&&that.afEl.css3Animate?that.afEl.css3Animate({y:that.el.scrollTop-that.refreshHeight+"px",x:"0%",time:HIDE_REFRESH_TIME+"ms",complete:endAnimationCb}):endAnimationCb(),this.refreshTriggered=!1}},nativeScroller.prototype.hideScrollbars=function(){},nativeScroller.prototype.scrollTo=function(pos,time){return this.logPos(pos.x,pos.y),pos.x*=-1,pos.y*=-1,this._scrollTo(pos,time)},nativeScroller.prototype.scrollBy=function(pos,time){return pos.x+=this.el.scrollLeft,pos.y+=this.el.scrollTop,this.logPos(this.el.scrollLeft,this.el.scrollTop),this._scrollTo(pos,time)},nativeScroller.prototype.scrollToBottom=function(time){//this.el.scrollTop = this.el.scrollHeight;
this._scrollToBottom(time),this.logPos(this.el.scrollLeft,this.el.scrollTop)},nativeScroller.prototype.onScroll=function(){if(this.infinite&&this.touchEndFired)return this.touchEndFired=!1,void 0;if(this.scrollSkip)return this.scrollSkip=!1,void 0;this.infinite&&!this.infiniteTriggered&&Math.abs(this.el.scrollTop)>=this.el.scrollHeight-this.el.clientHeight&&(this.infiniteTriggered=!0,$.trigger(this,"infinite-scroll"),this.infiniteEndCheck=!0);var that=this;this.infinite&&this.infiniteEndCheck&&this.infiniteTriggered&&(this.infiniteEndCheck=!1,$.trigger(that,"infinite-scroll-end"))},nativeScroller.prototype.logPos=function(x,y){this.loggedPcentX=this.divide(x,this.el.scrollWidth),this.loggedPcentY=this.divide(y,this.el.scrollHeight),this.scrollLeft=x,this.scrollTop=y,isNaN(this.loggedPcentX)&&(this.loggedPcentX=0),isNaN(this.loggedPcentY)&&(this.loggedPcentY=0)},nativeScroller.prototype.adjustScroll=function(){this.adjustScrollOverflowProxy_(),this.el.scrollLeft=this.loggedPcentX*this.el.scrollWidth,this.el.scrollTop=this.loggedPcentY*this.el.scrollHeight,this.logPos(this.el.scrollLeft,this.el.scrollTop)},//JS scroller
jsScroller.prototype.defaultProperties=function(){this.boolScrollLock=!1,this.currentScrollingObject=null,this.elementInfo=null,this.verticalScroll=!0,this.horizontalScroll=!1,this.scrollBars=!0,this.vscrollBar=null,this.hscrollBar=null,this.hScrollCSS="scrollBar",this.vScrollCSS="scrollBar",this.firstEventInfo=null,this.moved=!1,this.preventPullToRefresh=!0,this.isScrolling=!1,this.androidFormsMode=!1,this.refreshSafeKeep=!1,this.lastScrollbar="",this.finishScrollingObject=null,this.container=null,this.scrollingFinishCB=null,this.loggedPcentY=0,this.loggedPcentX=0},jsScroller.prototype.enable=function(firstExecution){this.eventsActive||(this.eventsActive=!0,firstExecution?this.scrollerMoveCSS({x:0,y:0},0):this.adjustScroll(),//add listeners
this.container.addEventListener("touchstart",this,!1),this.container.addEventListener("touchmove",this,!1),this.container.addEventListener("touchend",this,!1))},jsScroller.prototype.adjustScroll=function(){//set top/left
var size=this.getViewportSize();this.scrollerMoveCSS({x:Math.round(this.loggedPcentX*(this.el.clientWidth-size.w)),y:Math.round(this.loggedPcentY*(this.el.clientHeight-size.h))},0)},jsScroller.prototype.disable=function(){if(this.eventsActive){//log top/left
var cssMatrix=this.getCSSMatrix(this.el);this.logPos(numOnly(cssMatrix.e)-numOnly(this.container.scrollLeft),numOnly(cssMatrix.f)-numOnly(this.container.scrollTop)),//remove event listeners
this.container.removeEventListener("touchstart",this,!1),this.container.removeEventListener("touchmove",this,!1),this.container.removeEventListener("touchend",this,!1),this.eventsActive=!1}},jsScroller.prototype.addPullToRefresh=function(el,leaveRefresh){leaveRefresh||(this.refresh=!0),this.refresh&&this.refresh===!0&&(this.coreAddPullToRefresh(el),this.el.style.overflow="visible")},jsScroller.prototype.hideScrollbars=function(){this.hscrollBar&&(this.hscrollBar.style.display="none",this.hscrollBar.style[$.feat.cssPrefix+"TransitionDuration"]="0ms"),this.vscrollBar&&(this.vscrollBar.style.display="none",this.vscrollBar.style[$.feat.cssPrefix+"TransitionDuration"]="0ms")},jsScroller.prototype.getViewportSize=function(){var style=window.getComputedStyle(this.container);return isNaN(numOnly(style.paddingTop))&&alert(typeof style.paddingTop+"::"+style.paddingTop+":"),{h:this.container.clientHeight>window.innerHeight?window.innerHeight:this.container.clientHeight-numOnly(style.paddingTop)-numOnly(style.paddingBottom),w:this.container.clientWidth>window.innerWidth?window.innerWidth:this.container.clientWidth-numOnly(style.paddingLeft)-numOnly(style.paddingRight)}},jsScroller.prototype.onTouchStart=function(event){if(this.moved=!1,this.currentScrollingObject=null,this.container&&(this.refreshCancelCB&&(clearTimeout(this.refreshCancelCB),this.refreshCancelCB=null),this.scrollingFinishCB&&(clearTimeout(this.scrollingFinishCB),this.scrollingFinishCB=null),1==event.touches.length&&!this.boolScrollLock))//disable if locked
{// Allow interaction to legit calls, like select boxes, etc.
if(event.touches[0].target&&void 0!==event.touches[0].target.type){var tagname=event.touches[0].target.tagName.toLowerCase();if(event.touches[0].target.type.toLowerCase(),"select"==tagname)// stuff we need to allow
// access to legit calls
return}//default variables
var scrollInfo={//current position
top:0,left:0,//current movement
speedY:0,speedX:0,absSpeedY:0,absSpeedX:0,deltaY:0,deltaX:0,absDeltaY:0,absDeltaX:0,y:0,x:0,duration:0};//element info
this.elementInfo={};var size=this.getViewportSize();this.elementInfo.bottomMargin=size.h,this.elementInfo.maxTop=this.el.clientHeight-this.elementInfo.bottomMargin,this.elementInfo.maxTop<0&&(this.elementInfo.maxTop=0),this.elementInfo.divHeight=this.el.clientHeight,this.elementInfo.rightMargin=size.w,this.elementInfo.maxLeft=this.el.clientWidth-this.elementInfo.rightMargin,this.elementInfo.maxLeft<0&&(this.elementInfo.maxLeft=0),this.elementInfo.divWidth=this.el.clientWidth,this.elementInfo.hasVertScroll=this.verticalScroll||this.elementInfo.maxTop>0,this.elementInfo.hasHorScroll=this.elementInfo.maxLeft>0,this.elementInfo.requiresVScrollBar=this.vscrollBar&&this.elementInfo.hasVertScroll,this.elementInfo.requiresHScrollBar=this.hscrollBar&&this.elementInfo.hasHorScroll,//save event
this.saveEventInfo(event),this.saveFirstEventInfo(event);//get the current top
var cssMatrix=this.getCSSMatrix(this.el);scrollInfo.top=numOnly(cssMatrix.f)-numOnly(this.container.scrollTop),scrollInfo.left=numOnly(cssMatrix.e)-numOnly(this.container.scrollLeft),this.container.scrollTop=this.container.scrollLeft=0,this.currentScrollingObject=this.el,//get refresh ready
this.refresh&&0===scrollInfo.top?(this.refreshContainer.style.display="block",this.refreshHeight=this.refreshContainer.firstChild.clientHeight,this.refreshContainer.firstChild.style.top=-this.refreshHeight+"px",this.refreshContainer.style.overflow="visible",this.preventPullToRefresh=!1):scrollInfo.top<0&&(this.preventPullToRefresh=!0,this.refresh&&(this.refreshContainer.style.overflow="hidden")),//set target
scrollInfo.x=scrollInfo.left,scrollInfo.y=scrollInfo.top,//vertical scroll bar
this.setVScrollBar(scrollInfo,0,0)&&(this.vscrollBar.style.right=this.container.clientWidth>window.innerWidth?"0px":"0px",this.vscrollBar.style[$.feat.cssPrefix+"Transition"]=""),//horizontal scroll
this.setHScrollBar(scrollInfo,0,0)&&(this.container.clientHeight>window.innerHeight?this.hscrollBar.style.top=window.innerHeight-numOnly(this.hscrollBar.style.height)+"px":this.hscrollBar.style.bottom=numOnly(this.hscrollBar.style.height),this.hscrollBar.style[$.feat.cssPrefix+"Transition"]=""),//save scrollInfo
this.lastScrollInfo=scrollInfo,this.hasMoved=!1,0==this.elementInfo.maxTop&&0==this.elementInfo.maxLeft?this.currentScrollingObject=null:this.scrollerMoveCSS(this.lastScrollInfo,0)}},jsScroller.prototype.getCSSMatrix=function(el){if(this.androidFormsMode){//absolute mode
var top=parseInt(el.style.marginTop,10),left=parseInt(el.style.marginLeft,10);return isNaN(top)&&(top=0),isNaN(left)&&(left=0),{f:top,e:left}}//regular transform
var obj=$.getCssMatrix(el);return obj},jsScroller.prototype.saveEventInfo=function(event){this.lastEventInfo={pageX:event.touches[0].pageX,pageY:event.touches[0].pageY,time:event.timeStamp}},jsScroller.prototype.saveFirstEventInfo=function(event){this.firstEventInfo={pageX:event.touches[0].pageX,pageY:event.touches[0].pageY,time:event.timeStamp}},jsScroller.prototype.setVScrollBar=function(scrollInfo,time,timingFunction){if(!this.elementInfo.requiresVScrollBar)return!1;var newHeight=parseFloat(this.elementInfo.bottomMargin/this.elementInfo.divHeight)*this.elementInfo.bottomMargin+"px";numOnly(newHeight)>this.elementInfo.bottomMargin&&(newHeight=this.elementInfo.bottomMargin+"px"),newHeight!=this.vscrollBar.style.height&&(this.vscrollBar.style.height=newHeight);var pos=this.elementInfo.bottomMargin-numOnly(this.vscrollBar.style.height)-(this.elementInfo.maxTop+scrollInfo.y)/this.elementInfo.maxTop*(this.elementInfo.bottomMargin-numOnly(this.vscrollBar.style.height));return pos>this.elementInfo.bottomMargin&&(pos=this.elementInfo.bottomMargin),0>pos&&(pos=0),this.scrollbarMoveCSS(this.vscrollBar,{x:0,y:pos},time,timingFunction),!0},jsScroller.prototype.setHScrollBar=function(scrollInfo,time,timingFunction){if(!this.elementInfo.requiresHScrollBar)return!1;var newWidth=parseFloat(this.elementInfo.rightMargin/this.elementInfo.divWidth)*this.elementInfo.rightMargin+"px";newWidth!=this.hscrollBar.style.width&&(this.hscrollBar.style.width=newWidth);var pos=this.elementInfo.rightMargin-numOnly(this.hscrollBar.style.width)-(this.elementInfo.maxLeft+scrollInfo.x)/this.elementInfo.maxLeft*(this.elementInfo.rightMargin-numOnly(this.hscrollBar.style.width));return pos>this.elementInfo.rightMargin&&(pos=this.elementInfo.rightMargin),0>pos&&(pos=0),this.scrollbarMoveCSS(this.hscrollBar,{x:pos,y:0},time,timingFunction),!0},jsScroller.prototype.onTouchMove=function(event){if(null!==this.currentScrollingObject){//event.preventDefault();
var scrollInfo=this.calculateMovement(event);this.calculateTarget(scrollInfo),this.lastScrollInfo=scrollInfo,this.moved||($.trigger(this,"scrollstart"),$.trigger($.touchLayer,"scrollstart",[this.el]),this.elementInfo.requiresVScrollBar&&(this.vscrollBar.style.display="block"),this.elementInfo.requiresHScrollBar&&(this.hscrollBar.style.display="block")),this.moved=!0,this.refresh&&0===scrollInfo.top?(this.refreshContainer.style.display="block",this.refreshHeight=this.refreshContainer.firstChild.clientHeight,this.refreshContainer.firstChild.style.top=-this.refreshHeight+"px",this.refreshContainer.style.overflow="visible",this.preventPullToRefresh=!1):scrollInfo.top<0&&(this.preventPullToRefresh=!0,this.refresh&&(this.refreshContainer.style.overflow="hidden")),this.saveEventInfo(event),this.isScrolling===!1&&(// && (this.lastScrollInfo.x != this.lastScrollInfo.left || this.lastScrollInfo.y != this.lastScrollInfo.top)) {
this.isScrolling=!0,this.onScrollStart&&this.onScrollStart());//proceed normally
var cssMatrix=this.getCSSMatrix(this.el);this.lastScrollInfo.top=numOnly(cssMatrix.f),this.lastScrollInfo.left=numOnly(cssMatrix.e),this.recalculateDeltaY(this.lastScrollInfo),this.recalculateDeltaX(this.lastScrollInfo),//boundaries control
this.checkYboundary(this.lastScrollInfo),this.elementInfo.hasHorScroll&&this.checkXboundary(this.lastScrollInfo);//pull to refresh elastic
var positiveOverflow=this.lastScrollInfo.y>0&&this.lastScrollInfo.deltaY>0,negativeOverflow=this.lastScrollInfo.y<-this.elementInfo.maxTop&&this.lastScrollInfo.deltaY<0;if(positiveOverflow||negativeOverflow){var overflow=positiveOverflow?this.lastScrollInfo.y:-this.lastScrollInfo.y-this.elementInfo.maxTop,pcent=(this.container.clientHeight-overflow)/this.container.clientHeight;.5>pcent&&(pcent=.5);//cur top, maxTop or 0?
var baseTop=0;positiveOverflow&&this.lastScrollInfo.top>0||negativeOverflow&&this.lastScrollInfo.top<-this.elementInfo.maxTop?baseTop=this.lastScrollInfo.top:negativeOverflow&&(baseTop=-this.elementInfo.maxTop);var changeY=this.lastScrollInfo.deltaY*pcent,absChangeY=Math.abs(this.lastScrollInfo.deltaY*pcent);1>absChangeY&&(changeY=positiveOverflow?1:-1),this.lastScrollInfo.y=baseTop+changeY}if(this.elementInfo.hasHorScroll&&(positiveOverflow=this.lastScrollInfo.x>0&&this.lastScrollInfo.deltaX>0,negativeOverflow=this.lastScrollInfo.x<-this.elementInfo.maxLeft&&this.lastScrollInfo.deltaX<0,positiveOverflow||negativeOverflow)){var overflow=positiveOverflow?this.lastScrollInfo.x:-this.lastScrollInfo.x-this.elementInfo.maxLeft,pcent=(this.container.clientWidth-overflow)/this.container.clientWidth;.5>pcent&&(pcent=.5);//cur top, maxTop or 0?
var baseTop=0;positiveOverflow&&this.lastScrollInfo.left>0||negativeOverflow&&this.lastScrollInfo.left<-this.elementInfo.maxLeft?baseTop=this.lastScrollInfo.left:negativeOverflow&&(baseTop=-this.elementInfo.maxLeft);var changeX=this.lastScrollInfo.deltaX*pcent,absChangeX=Math.abs(this.lastScrollInfo.deltaX*pcent);1>absChangeX&&(changeX=positiveOverflow?1:-1),this.lastScrollInfo.x=baseTop+changeX}this.lockBounce&&(this.lastScrollInfo.x>0?this.lastScrollInfo.x=0:-1*this.lastScrollInfo.x>this.elementInfo.maxLeft&&(this.lastScrollInfo.x=-1*this.elementInfo.maxLeft),this.lastScrollInfo.y>0?this.lastScrollInfo.y=0:-1*this.lastScrollInfo.y>this.elementInfo.maxTop&&(this.lastScrollInfo.y=-1*this.elementInfo.maxTop)),//move
this.scrollerMoveCSS(this.lastScrollInfo,0),this.setVScrollBar(this.lastScrollInfo,0,0),this.setHScrollBar(this.lastScrollInfo,0,0),//check refresh triggering
this.refresh&&!this.preventPullToRefresh&&(!this.refreshTriggered&&this.lastScrollInfo.top>this.refreshHeight?(this.refreshTriggered=!0,$.trigger(this,"refresh-trigger")):this.refreshTriggered&&this.lastScrollInfo.top<this.refreshHeight&&(this.refreshTriggered=!1,$.trigger(this,"refresh-cancel"))),this.infinite&&!this.infiniteTriggered&&Math.abs(this.lastScrollInfo.top)>=this.el.clientHeight-this.container.clientHeight&&(this.infiniteTriggered=!0,$.trigger(this,"infinite-scroll"))}},jsScroller.prototype.calculateMovement=function(event,last){//default variables
var scrollInfo={//current position
top:0,left:0,//current movement
speedY:0,speedX:0,absSpeedY:0,absSpeedX:0,deltaY:0,deltaX:0,absDeltaY:0,absDeltaX:0,y:0,x:0,duration:0},prevEventInfo=last?this.firstEventInfo:this.lastEventInfo,pageX=last?event.pageX:event.touches[0].pageX,pageY=last?event.pageY:event.touches[0].pageY,time=last?event.time:event.timeStamp;return scrollInfo.deltaY=this.elementInfo.hasVertScroll?pageY-prevEventInfo.pageY:0,scrollInfo.deltaX=this.elementInfo.hasHorScroll?pageX-prevEventInfo.pageX:0,scrollInfo.time=time,scrollInfo.duration=time-prevEventInfo.time,scrollInfo},jsScroller.prototype.calculateTarget=function(scrollInfo){scrollInfo.y=this.lastScrollInfo.y+scrollInfo.deltaY,scrollInfo.x=this.lastScrollInfo.x+scrollInfo.deltaX},jsScroller.prototype.checkYboundary=function(scrollInfo){var minTop=this.container.clientHeight/2,maxTop=this.elementInfo.maxTop+minTop;//y boundaries
if(scrollInfo.y>minTop)scrollInfo.y=minTop;else{if(!(-scrollInfo.y>maxTop))return;scrollInfo.y=-maxTop}this.recalculateDeltaY(scrollInfo)},jsScroller.prototype.checkXboundary=function(scrollInfo){//x boundaries
var minLeft=this.container.clientWidth/2,maxLeft=this.elementInfo.maxLeft+minLeft;if(scrollInfo.x>minLeft)scrollInfo.x=minLeft;else{if(!(-scrollInfo.x>maxLeft))return;scrollInfo.x=-maxLeft}this.recalculateDeltaX(scrollInfo)},jsScroller.prototype.recalculateDeltaY=function(scrollInfo){//recalculate delta
var oldAbsDeltaY=Math.abs(scrollInfo.deltaY);scrollInfo.deltaY=scrollInfo.y-scrollInfo.top,newAbsDeltaY=Math.abs(scrollInfo.deltaY),//recalculate duration at same speed
scrollInfo.duration=scrollInfo.duration*newAbsDeltaY/oldAbsDeltaY},jsScroller.prototype.recalculateDeltaX=function(scrollInfo){//recalculate delta
var oldAbsDeltaX=Math.abs(scrollInfo.deltaX);scrollInfo.deltaX=scrollInfo.x-scrollInfo.left,newAbsDeltaX=Math.abs(scrollInfo.deltaX),//recalculate duration at same speed
scrollInfo.duration=scrollInfo.duration*newAbsDeltaX/oldAbsDeltaX},jsScroller.prototype.hideRefresh=function(){var that=this;this.preventHideRefresh||(this.scrollerMoveCSS({x:0,y:0,complete:function(){$.trigger(that,"refresh-finish")}},HIDE_REFRESH_TIME),this.refreshTriggered=!1)},jsScroller.prototype.setMomentum=function(scrollInfo){var deceleration=.0012;//calculate movement speed
scrollInfo.speedY=this.divide(scrollInfo.deltaY,scrollInfo.duration),scrollInfo.speedX=this.divide(scrollInfo.deltaX,scrollInfo.duration),scrollInfo.absSpeedY=Math.abs(scrollInfo.speedY),scrollInfo.absSpeedX=Math.abs(scrollInfo.speedX),scrollInfo.absDeltaY=Math.abs(scrollInfo.deltaY),scrollInfo.absDeltaX=Math.abs(scrollInfo.deltaX),//set momentum
scrollInfo.absDeltaY>0?(scrollInfo.deltaY=(scrollInfo.deltaY<0?-1:1)*scrollInfo.absSpeedY*scrollInfo.absSpeedY/(2*deceleration),scrollInfo.absDeltaY=Math.abs(scrollInfo.deltaY),scrollInfo.duration=scrollInfo.absSpeedY/deceleration,scrollInfo.speedY=scrollInfo.deltaY/scrollInfo.duration,scrollInfo.absSpeedY=Math.abs(scrollInfo.speedY),(scrollInfo.absSpeedY<100*deceleration||scrollInfo.absDeltaY<5)&&(scrollInfo.deltaY=scrollInfo.absDeltaY=scrollInfo.duration=scrollInfo.speedY=scrollInfo.absSpeedY=0)):scrollInfo.absDeltaX?(scrollInfo.deltaX=(scrollInfo.deltaX<0?-1:1)*scrollInfo.absSpeedX*scrollInfo.absSpeedX/(2*deceleration),scrollInfo.absDeltaX=Math.abs(scrollInfo.deltaX),scrollInfo.duration=scrollInfo.absSpeedX/deceleration,scrollInfo.speedX=scrollInfo.deltaX/scrollInfo.duration,scrollInfo.absSpeedX=Math.abs(scrollInfo.speedX),(scrollInfo.absSpeedX<100*deceleration||scrollInfo.absDeltaX<5)&&(scrollInfo.deltaX=scrollInfo.absDeltaX=scrollInfo.duration=scrollInfo.speedX=scrollInfo.absSpeedX=0)):scrollInfo.duration=0},jsScroller.prototype.onTouchEnd=function(){if(null!==this.currentScrollingObject&&this.moved){//event.preventDefault();
this.finishScrollingObject=this.currentScrollingObject,this.currentScrollingObject=null;var scrollInfo=this.calculateMovement(this.lastEventInfo,!0);this.androidFormsMode||this.setMomentum(scrollInfo),this.calculateTarget(scrollInfo);//get the current top
var cssMatrix=this.getCSSMatrix(this.el);scrollInfo.top=numOnly(cssMatrix.f),scrollInfo.left=numOnly(cssMatrix.e),//boundaries control
this.checkYboundary(scrollInfo),this.elementInfo.hasHorScroll&&this.checkXboundary(scrollInfo);var triggered=!this.preventPullToRefresh&&(scrollInfo.top>this.refreshHeight||scrollInfo.y>this.refreshHeight);this.fireRefreshRelease(triggered,scrollInfo.top>0),//refresh hang in
this.refresh&&triggered?(scrollInfo.y=this.refreshHeight,scrollInfo.duration=HIDE_REFRESH_TIME):scrollInfo.y>=0?(scrollInfo.y=0,scrollInfo.top>=0&&(scrollInfo.duration=HIDE_REFRESH_TIME)):(-scrollInfo.y>this.elementInfo.maxTop||0===this.elementInfo.maxTop)&&(scrollInfo.y=-this.elementInfo.maxTop,-scrollInfo.top>this.elementInfo.maxTop&&(scrollInfo.duration=HIDE_REFRESH_TIME)),this.elementInfo.hasHorScroll&&(scrollInfo.x>=0?(scrollInfo.x=0,scrollInfo.left>=0&&(scrollInfo.duration=HIDE_REFRESH_TIME)):(-scrollInfo.x>this.elementInfo.maxLeft||0===this.elementInfo.maxLeft)&&(scrollInfo.x=-this.elementInfo.maxLeft,-scrollInfo.left>this.elementInfo.maxLeft&&(scrollInfo.duration=HIDE_REFRESH_TIME))),this.androidFormsMode&&(scrollInfo.duration=0),this.scrollerMoveCSS(scrollInfo,scrollInfo.duration,"cubic-bezier(0.33,0.66,0.66,1)"),this.setVScrollBar(scrollInfo,scrollInfo.duration,"cubic-bezier(0.33,0.66,0.66,1)"),this.setHScrollBar(scrollInfo,scrollInfo.duration,"cubic-bezier(0.33,0.66,0.66,1)"),this.setFinishCalback(scrollInfo.duration),this.infinite&&!this.infiniteTriggered&&Math.abs(scrollInfo.y)>=this.el.clientHeight-this.container.clientHeight&&(this.infiniteTriggered=!0,$.trigger(this,"infinite-scroll"))}},//finish callback
jsScroller.prototype.setFinishCalback=function(duration){var that=this;this.scrollingFinishCB=setTimeout(function(){that.hideScrollbars(),$.trigger($.touchLayer,"scrollend",[that.el]),//notify touchLayer of this elements scrollend
$.trigger(that,"scrollend",[that.el]),that.isScrolling=!1,that.elementInfo=null,//reset elementInfo when idle
that.infinite&&$.trigger(that,"infinite-scroll-end")},duration)},//Android Forms Fix
jsScroller.prototype.startFormsMode=function(){if(!this.blockFormsFix){//get prev values
var cssMatrix=this.getCSSMatrix(this.el);//toggle vars
this.refreshSafeKeep=this.refresh,this.refresh=!1,this.androidFormsMode=!0,//set new css rules
this.el.style[$.feat.cssPrefix+"Transform"]="none",this.el.style[$.feat.cssPrefix+"Transition"]="none",this.el.style[$.feat.cssPrefix+"Perspective"]="none",//set position
this.scrollerMoveCSS({x:numOnly(cssMatrix.e),y:numOnly(cssMatrix.f)},0),//container
this.container.style[$.feat.cssPrefix+"Perspective"]="none",this.container.style[$.feat.cssPrefix+"BackfaceVisibility"]="visible",//scrollbars
this.vscrollBar&&(this.vscrollBar.style[$.feat.cssPrefix+"Transform"]="none",this.vscrollBar.style[$.feat.cssPrefix+"Transition"]="none",this.vscrollBar.style[$.feat.cssPrefix+"Perspective"]="none",this.vscrollBar.style[$.feat.cssPrefix+"BackfaceVisibility"]="visible"),this.hscrollBar&&(this.hscrollBar.style[$.feat.cssPrefix+"Transform"]="none",this.hscrollBar.style[$.feat.cssPrefix+"Transition"]="none",this.hscrollBar.style[$.feat.cssPrefix+"Perspective"]="none",this.hscrollBar.style[$.feat.cssPrefix+"BackfaceVisibility"]="visible")}},jsScroller.prototype.stopFormsMode=function(){if(!this.blockFormsFix){//get prev values
var cssMatrix=this.getCSSMatrix(this.el);//toggle vars
this.refresh=this.refreshSafeKeep,this.androidFormsMode=!1,//set new css rules
this.el.style[$.feat.cssPrefix+"Perspective"]=1e3,this.el.style.marginTop=0,this.el.style.marginLeft=0,this.el.style[$.feat.cssPrefix+"Transition"]="0ms linear",//reactivate transitions
//set position
this.scrollerMoveCSS({x:numOnly(cssMatrix.e),y:numOnly(cssMatrix.f)},0),//container
this.container.style[$.feat.cssPrefix+"Perspective"]=1e3,this.container.style[$.feat.cssPrefix+"BackfaceVisibility"]="hidden",//scrollbars
this.vscrollBar&&(this.vscrollBar.style[$.feat.cssPrefix+"Perspective"]=1e3,this.vscrollBar.style[$.feat.cssPrefix+"BackfaceVisibility"]="hidden"),this.hscrollBar&&(this.hscrollBar.style[$.feat.cssPrefix+"Perspective"]=1e3,this.hscrollBar.style[$.feat.cssPrefix+"BackfaceVisibility"]="hidden")}},jsScroller.prototype.scrollerMoveCSS=function(distanceToMove,time,timingFunction){time||(time=0),timingFunction||(timingFunction="linear"),time=numOnly(time),this.el&&this.el.style&&(//do not touch the DOM if disabled
this.eventsActive&&(this.androidFormsMode?(this.el.style.marginTop=Math.round(distanceToMove.y)+"px",this.el.style.marginLeft=Math.round(distanceToMove.x)+"px"):(this.el.style[$.feat.cssPrefix+"Transform"]="translate"+translateOpen+distanceToMove.x+"px,"+distanceToMove.y+"px"+translateClose,this.el.style[$.feat.cssPrefix+"TransitionDuration"]=time+"ms",this.el.style[$.feat.cssPrefix+"TransitionTimingFunction"]=timingFunction)),// Position should be updated even when the scroller is disabled so we log the change
this.logPos(distanceToMove.x,distanceToMove.y))},jsScroller.prototype.logPos=function(x,y){var size;size=this.elementInfo?{h:this.elementInfo.bottomMargin,w:this.elementInfo.rightMargin}:this.getViewportSize(),this.loggedPcentX=this.divide(x,this.el.clientWidth-size.w),this.loggedPcentY=this.divide(y,this.el.clientHeight-size.h),this.scrollTop=y,this.scrollLeft=x},jsScroller.prototype.scrollbarMoveCSS=function(el,distanceToMove,time,timingFunction){time||(time=0),timingFunction||(timingFunction="linear"),el&&el.style&&(this.androidFormsMode?(el.style.marginTop=Math.round(distanceToMove.y)+"px",el.style.marginLeft=Math.round(distanceToMove.x)+"px"):(el.style[$.feat.cssPrefix+"Transform"]="translate"+translateOpen+distanceToMove.x+"px,"+distanceToMove.y+"px"+translateClose,el.style[$.feat.cssPrefix+"TransitionDuration"]=time+"ms",el.style[$.feat.cssPrefix+"TransitionTimingFunction"]=timingFunction))},jsScroller.prototype.scrollTo=function(pos,time){time||(time=0),this.scrollerMoveCSS(pos,time)},jsScroller.prototype.scrollBy=function(pos,time){var cssMatrix=this.getCSSMatrix(this.el),startTop=numOnly(cssMatrix.f),startLeft=numOnly(cssMatrix.e);this.scrollTo({y:startTop-pos.y,x:startLeft-pos.x},time)},jsScroller.prototype.scrollToBottom=function(time){this.scrollTo({y:-1*(this.el.clientHeight-this.container.clientHeight),x:0},time)},jsScroller.prototype.scrollToTop=function(time){this.scrollTo({x:0,y:0},time)},scroller}()}(af);