/**
 * @copyright: 2011 Intel
 * @description:  This script will replace all drop downs with friendly select controls.  Users can still interact
 * with the old drop down box as normal with javascript, and this will be reflected
 */
!function($){function updateOption(prop,oldValue,newValue){return newValue===!0&&(this.getAttribute("multiple")||$.selectBox.updateMaskValue(this.parentNode.id,this.text,this.value),this.parentNode.value=this.value),newValue}function updateIndex(prop,oldValue,newValue){return this.options[newValue]&&(this.getAttribute("multiple")||$.selectBox.updateMaskValue(this.linker,this.options[newValue].value,this.options[newValue].text),this.value=this.options[newValue].value),newValue}function destroy(e){var el=e.target;$(el.linker).remove(),delete el.linker,e.stopPropagation()}$.selectBox={scroller:null,currLinker:null,getOldSelects:function(elID){if($.os.android&&!$.os.androidICS){if(!$.fn.scroller)return alert("This library requires af.scroller"),void 0;var container=elID&&document.getElementById(elID)?document.getElementById(elID):document;if(!container)return alert("Could not find container element for af.selectBox "+elID),void 0;for(var sels=container.getElementsByTagName("select"),that=this,i=0;i<sels.length;i++){var el=sels[i];el.style.display="none";var fixer=$.create("div",{className:"afFakeSelect"});fixer.get(0).linker=sels[i],el.linker=fixer.get(0),fixer.insertAfter(sels[i]),el.watch("selectedIndex",updateIndex);for(var j=0;j<el.options.length;j++)el.options[j].watch("selected",updateOption),el.options[j].selected&&fixer.html(el.options[j].text);$(el).one("destroy",destroy)}that.createHtml()}},updateDropdown:function(el){if(el){for(var j=0;j<el.options.length;j++)el.options[j].selected&&(el.linker.innerHTML=el.options[j].text);el=null}},initDropDown:function(el){if(!el.disabled&&el&&el.options&&0!==el.options.length){var foundInd=0,$scr=$("#afSelectBoxfix");$scr.html("<ul></ul>");for(var $list=$scr.find("ul"),j=0;j<el.options.length;j++){el.options[j].watch("selected",updateOption);var checked=el.options[j].selected?"selected":"";checked&&(foundInd=j+1);var row=$.create("li",{html:el.options[j].text,className:checked});row.data("ind",j),$list.append(row)}$("#afModalMask").show();try{if(foundInd>0&&"multiple"!=el.getAttribute("multiple")){var scrollToPos=0,scrollThreshold=numOnly($list.find("li").computedStyle("height")),theHeight=numOnly($("#afSelectBoxContainer").computedStyle("height"));foundInd*scrollThreshold>=theHeight&&(scrollToPos=(foundInd-1)*-scrollThreshold),this.scroller.scrollTo({x:0,y:scrollToPos})}}catch(e){console.log("error init dropdown"+e)}var selClose="block"==$("#afSelectClose").css("display")?numOnly($("#afSelectClose").height()):0;$("#afSelectWrapper").height(numOnly($("#afSelectBoxContainer").height())-selClose+"px")}},updateMaskValue:function(linker,value,val2){$(linker).html(val2)},setDropDownValue:function(el,value){if(el){var $el=$(el);if(value=parseInt(value,10),el.getAttribute("multiple")){//multi select
// var myEl = $el.find("option:nth-child(" + (value + 1) + ")").get(0);
var myList=$("#afSelectBoxfix li:nth-child("+(value+1)+")");myList.hasClass("selected")?myList.removeClass("selected"):myList.addClass("selected")}else el.selectedIndex=value,$el.find("option").prop("selected",!1),$el.find("option:nth-child("+(value+1)+")").prop("selected",!0),this.scroller.scrollTo({x:0,y:0}),this.hideDropDown();$(el).trigger("change"),el=null}},hideDropDown:function(){$("#afModalMask").hide(),$("#afSelectBoxfix").html("")},createHtml:function(){var that=this;document.getElementById("afSelectBoxfix")||$(document).ready(function(){$(document).on("click",".afFakeSelect",function(){this.linker.disabled||(that.currLinker=this,"multiple"==this.linker.getAttribute("multiple")?$("#afSelectClose").show():$("#afSelectClose").hide(),that.initDropDown(this.linker))});var container=$.create("div",{id:"afSelectBoxContainer"}),modalDiv=$.create("div",{id:"afSelectBoxfix"}),modalWrapper=$.create("div",{id:"afSelectWrapper"});modalWrapper.css("position","relative"),modalWrapper.append(modalDiv);var closeDiv=$.create("div",{id:"afSelectClose",html:"<a id='afSelectDone'>Done</a> <a id='afSelectCancel'>Cancel</a>"}),modalMask=$.create("div",{id:"afModalMask"}),$afui=$("#afui");container.prepend(closeDiv).append(modalWrapper),modalMask.append(container),$afui.length>0?$afui.append(modalMask):document.body.appendChild(modalMask.get(0)),that.scroller=$.query("#afSelectBoxfix").scroller({scroller:!1,verticalScroll:!0,vScrollCSS:"jqselectscrollBarV"}),$("#afModalMask").on("click",function(e){var $e=$(e.target);0===$e.closest("#afSelectBoxContainer").length&&that.hideDropDown()}),$("#afSelectBoxfix").on("click","li",function(e){var $el=$(e.target);that.setDropDownValue(that.currLinker.linker,$el.data("ind"))}),$("#afSelectBoxContainer").on("click","a",function(e){if("afSelectCancel"==e.target.id)return that.hideDropDown();var $sel=$(that.currLinker.linker);return $sel.find("option").prop("selected",!1),$("#afSelectBoxfix li").each(function(){var $el=$(this);if($el.hasClass("selected")){var ind=parseInt($el.data("ind"),10);$sel.find("option:nth-child("+(ind+1)+")").prop("selected",!0),that.currLinker.innerHTML=$el.html()}}),that.hideDropDown(),e.stopPropagation(),e.preventDefault(),!1})})}},//The following is based off Eli Grey's shim
//https://gist.github.com/384583
//We use HTMLElement to not cause problems with other objects
HTMLElement.prototype.watch||(HTMLElement.prototype.watch=function(prop,handler){var oldval=this[prop],newval=oldval,getter=function(){return newval},setter=function(val){return oldval=newval,newval=handler.call(this,prop,oldval,val)};delete this[prop]&&(// can't watch constants
HTMLElement.defineProperty?// ECMAScript 5
HTMLElement.defineProperty(this,prop,{get:getter,set:setter,enumerable:!1,configurable:!0}):HTMLElement.prototype.__defineGetter__&&HTMLElement.prototype.__defineSetter__&&(// legacy
HTMLElement.prototype.__defineGetter__.call(this,prop,getter),HTMLElement.prototype.__defineSetter__.call(this,prop,setter)))}),HTMLElement.prototype.unwatch||(HTMLElement.prototype.unwatch=function(prop){var val=this[prop];delete this[prop],// remove accessors
this[prop]=val})}(af);