//desktopBrowsers contributed by Carlos Ouro @ Badoo
//translates desktop browsers events to touch events and prevents defaults
//It can be used independently in other apps but it is required for using the touchLayer in the desktop
!function($){var cancelClickMove=!1,preventAll=function(e){e.preventDefault(),e.stopPropagation()},redirectMouseToTouch=function(type,originalEvent,newTarget){var theTarget=newTarget?newTarget:originalEvent.target;//stop propagation, and remove default behavior for everything but INPUT, TEXTAREA & SELECT fields
-1==theTarget.tagName.toUpperCase().indexOf("SELECT")&&-1==theTarget.tagName.toUpperCase().indexOf("TEXTAREA")&&-1==theTarget.tagName.toUpperCase().indexOf("INPUT")&&preventAll(originalEvent);var touchevt=document.createEvent("MouseEvent");if(touchevt.initEvent(type,!0,!0),touchevt.initMouseEvent(type,!0,!0,window,originalEvent.detail,originalEvent.screenX,originalEvent.screenY,originalEvent.clientX,originalEvent.clientY,originalEvent.ctrlKey,originalEvent.shiftKey,originalEvent.altKey,originalEvent.metaKey,originalEvent.button,originalEvent.relatedTarget),"touchend"!=type&&(touchevt.touches=[],touchevt.touches[0]={},touchevt.touches[0].pageX=originalEvent.pageX,touchevt.touches[0].pageY=originalEvent.pageY,//target
touchevt.touches[0].target=theTarget,touchevt.changedTouches=touchevt.touches,touchevt.targetTouches=touchevt.touches),//target
touchevt.mouseToTouch=!0,$.os.ie)for(//handle inline event handlers for target and parents (for bubbling)
var elem=originalEvent.target;null!==elem;)elem.hasAttribute("on"+type)&&eval(elem.getAttribute("on"+type)),elem=elem.parentElement;theTarget.dispatchEvent(touchevt)},mouseDown=!1,lastTarget=null,firstMove=!1;prevX=0,prevY=0,window.navigator.msPointerEnabled?(//Win8
document.addEventListener("MSPointerDown",function(e){mouseDown=!0,lastTarget=e.target,"a"==e.target.nodeName.toLowerCase()&&"javascript:;"==e.target.href.toLowerCase()&&(e.target.href=""),redirectMouseToTouch("touchstart",e),cancelClickMove=!1,prevX=e.clientX,prevY=e.clientY},!0),document.addEventListener("MSPointerUp",function(e){mouseDown&&(redirectMouseToTouch("touchend",e,lastTarget),//bind it to initial mousedown target
lastTarget=null,mouseDown=!1)},!0),document.addEventListener("MSPointerMove",function(e){(e.clientX!=prevX||e.clientY!=prevY)&&mouseDown&&(redirectMouseToTouch("touchmove",e,lastTarget),e.preventDefault(),//e.stopPropagation();
cancelClickMove=!0)},!0)):(document.addEventListener("mousedown",function(e){mouseDown=!0,lastTarget=e.target,"a"==e.target.nodeName.toLowerCase()&&"javascript:;"==e.target.href.toLowerCase()&&(e.target.href="#"),redirectMouseToTouch("touchstart",e),cancelClickMove=!1,prevX=e.clientX,prevY=e.clientY},!0),document.addEventListener("mouseup",function(e){mouseDown&&(redirectMouseToTouch("touchend",e,lastTarget),//bind it to initial mousedown target
lastTarget=null,mouseDown=!1)},!0),document.addEventListener("mousemove",function(e){(e.clientX!=prevX||e.clientY!=prevY)&&mouseDown&&(redirectMouseToTouch("touchmove",e,lastTarget),e.preventDefault(),cancelClickMove=!0)},!0)),//prevent all mouse events which dont exist on touch devices
document.addEventListener("drag",preventAll,!0),document.addEventListener("dragstart",preventAll,!0),document.addEventListener("dragenter",preventAll,!0),document.addEventListener("dragover",preventAll,!0),document.addEventListener("dragleave",preventAll,!0),document.addEventListener("dragend",preventAll,!0),document.addEventListener("drop",preventAll,!0),document.addEventListener("selectstart",preventAll,!0),document.addEventListener("click",function(e){e.mouseToTouch||e.target!=lastTarget||preventAll(e),cancelClickMove&&(preventAll(e),cancelClickMove=!1)},!0),window.addEventListener("resize",function(){var touchevt=document.createEvent("Event");touchevt.initEvent("orientationchange",!0,!0),document.dispatchEvent(touchevt)},!1)}(jq);